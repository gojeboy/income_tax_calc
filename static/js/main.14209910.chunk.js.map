{"version":3,"sources":["constants/contants.js","computations/computations.js","layout/Moneyinput.js","components/Inputs.js","actions/taxAction.js","actions/type.js","components/TaxInput.js","layout/MoneyOutput.js","reducers/taxReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["tax_brackets","id","min","max","fixed_tax","tax_rate","primary_rebate","retirement_deductable_max","ANNUAL_TFSA_LIMIT","calculate_tax","bracket","taxable_income","gross_annual_income","gross_uif","calculate_uif","calculate_tax_bracket","monthly_user_info","provident_fund","pension_fund","ra_fund","monthly_salary","deductables","total","calculate_deductables","annual_income","annual_income_after_deductables","normal_tax_bracket","filter","deducated_tax_bracket","original_paye","deduceted_paye","original_income_per_month","rebate","retirement_savings_rate","Moneyinput","_this$props","this","props","label","name","value","type","onChange","react_default","a","createElement","FormControl","fullWidth","margin","InputLabel","htmlFor","Input","Component","Inputs","state","_this","income_info","e","setState","Object","defineProperty","target","onClick","preventDefault","_this$state","className","layout_Moneyinput","Button","variant","color","connect","console","log","payload","TaxInput","calculate_tfsa_constribution","tfsa_conrtibution_from_rebate","tfsa_conrtibution_remaining","excess","income_info_input","tax_bracket","new_tfsa_saving","components_Inputs","tax","initialState","combineReducers","arguments","length","undefined","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","react_router_dom","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.14209910.chunk.js","sourcesContent":["export const tax_brackets = [\n  {\n    id: 1,\n    min: 0.0,\n    max: 195850.0,\n    fixed_tax: 0.0,\n    tax_rate: 18\n  },\n\n  {\n    id: 2,\n    min: 195851.0,\n    max: 305850.0,\n    fixed_tax: 35253.0,\n    tax_rate: 26\n  },\n  {\n    id: 3,\n    min: 305851.0,\n    max: 423300.0,\n    fixed_tax: 63853.0,\n    tax_rate: 31\n  },\n  {\n    id: 4,\n    min: 423301.0,\n    max: 555600.0,\n    fixed_tax: 100263.0,\n    tax_rate: 36\n  },\n  {\n    id: 5,\n    min: 555601.0,\n    max: 708310.0,\n    fixed_tax: 147891.0,\n    tax_rate: 39\n  },\n  {\n    id: 6,\n    min: 708311.0,\n    max: 1500000.0,\n    fixed_tax: 207448.0,\n    tax_rate: 41\n  },\n  {\n    id: 7,\n    min: 1500001.0,\n    max: 10000000000000000,\n    fixed_tax: 532041.0,\n    tax_rate: 45\n  }\n];\n\nexport const primary_rebate = 14220;\nexport const retirement_deductable_max = 350000;\nexport const ANNUAL_TFSA_LIMIT = 33000;\n","import {\n  tax_brackets,\n  primary_rebate,\n  retirement_deductable_max\n} from \"../constants/contants\";\n\nfunction calculate_uif(gross_uif) {\n  if (gross_uif > 148.72 * 12) {\n    return 148.72 * 12;\n  } else {\n    return gross_uif;\n  }\n}\nfunction calculate_tax(bracket, taxable_income, gross_annual_income) {\n  const primary_paye =\n    bracket.fixed_tax +\n    (taxable_income - (bracket.min - 1)) * (bracket.tax_rate / 100);\n  const paye = primary_paye - primary_rebate;\n\n  const gross_uif = gross_annual_income * (1 / 100);\n  const uif = calculate_uif(gross_uif);\n\n  return paye + uif;\n}\n\nfunction calculate_deductables(provident_fund, pension_fund, ra_fund) {\n  const total = provident_fund * 12 + pension_fund * 12 + ra_fund * 12;\n\n  if (total > retirement_deductable_max) {\n    return retirement_deductable_max;\n  } else {\n    return total;\n  }\n}\nexport const calculate_tax_bracket = monthly_user_info => {\n  const {\n    provident_fund,\n    pension_fund,\n    ra_fund,\n    monthly_salary\n  } = monthly_user_info;\n\n  const deductables = calculate_deductables(\n    provident_fund,\n    pension_fund,\n    ra_fund\n  );\n\n  const annual_income = monthly_salary * 12;\n  const annual_income_after_deductables = annual_income - deductables;\n\n  const normal_tax_bracket = tax_brackets.filter(bracket => {\n    const { id, min, max, fixed_tax, tax_rate } = bracket;\n    if (annual_income >= min && annual_income <= max) {\n      return bracket;\n    }\n  });\n\n  const deducated_tax_bracket = tax_brackets.filter(bracket => {\n    const { id, min, max, fixed_tax, tax_rate } = bracket;\n    if (\n      annual_income_after_deductables >= min &&\n      annual_income_after_deductables <= max\n    ) {\n      return bracket;\n    }\n  });\n\n  const original_paye = calculate_tax(\n    normal_tax_bracket[0],\n    annual_income,\n    annual_income\n  );\n\n  const deduceted_paye = calculate_tax(\n    deducated_tax_bracket[0],\n    annual_income_after_deductables,\n    annual_income\n  );\n  const original_income_per_month = (annual_income - original_paye) / 12;\n\n  const retirement_savings_rate = (deductables / annual_income) * 100;\n\n  const return_object = {\n    original_paye: original_paye,\n    deduceted_paye: deduceted_paye,\n    original_income_per_month: original_income_per_month,\n    rebate: original_paye - deduceted_paye,\n    retirement_savings_rate: retirement_savings_rate\n  };\n\n  return return_object;\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n//material-ui imports\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nclass Moneyinput extends Component {\n  render() {\n    const { label, id, name, value, type, onChange } = this.props;\n    return (\n      <FormControl fullWidth={true} margin=\"normal\">\n        <InputLabel htmlFor={id}>{label}</InputLabel>\n        <Input\n          id={id}\n          name={name}\n          value={value}\n          type={type}\n          onChange={onChange}\n        />\n      </FormControl>\n    );\n  }\n}\n\nMoneyinput.propTypes = {\n  label: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func\n};\n\nexport default Moneyinput;\n","import React, { Component } from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { calculate_tax } from \"../actions/taxAction\";\nimport Moneyinput from \"../layout/Moneyinput\";\n\n//material ui imports\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\n\nclass Inputs extends Component {\n  state = this.props.income_info;\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onClick = e => {\n    e.preventDefault();\n\n    this.props.calculate_tax(this.state);\n  };\n\n  render() {\n    const {\n      monthly_salary,\n      provident_fund,\n      pension_fund,\n      ra_fund\n    } = this.state;\n\n    // console.log(\"This issa state: \", this.state);\n    return (\n      <FormControl className=\"form-container\">\n        <div className=\"card-header\">Income and Retirement Savings</div>\n\n        <Moneyinput\n          label=\"Enter your monthly gross salary R\"\n          id=\"monthly_salary\"\n          name=\"monthly_salary\"\n          value={monthly_salary}\n          type=\"number\"\n          onChange={this.onChange}\n        />\n        <Moneyinput\n          label=\"Enter your monthly provident fund constribution\"\n          id=\"provident_fund\"\n          name=\"provident_fund\"\n          value={provident_fund}\n          type=\"number\"\n          onChange={this.onChange}\n        />\n\n        <Moneyinput\n          label=\"Enter your monthly pension fund constribution\"\n          id=\"pension_fund\"\n          name=\"pension_fund\"\n          value={pension_fund}\n          type=\"number\"\n          onChange={this.onChange}\n        />\n\n        <Moneyinput\n          label=\"Enter your monthly retirement annuity fund constribution\"\n          id=\"ra_fund\"\n          name=\"ra_fund\"\n          value={ra_fund}\n          type=\"number\"\n          onChange={this.onChange}\n        />\n\n        <Button onClick={this.onClick} variant=\"contained\" color=\"primary\">\n          Calculate\n        </Button>\n      </FormControl>\n    );\n  }\n}\n\nInputs.propTypes = {\n  calculate_tax: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { calculate_tax }\n)(Inputs);\n","import { CALCULATE_TAX_RETURN } from \"./type\";\n\nexport const calculate_tax = monthly_user_info => {\n  console.log(\"about to dispatch action with: \", monthly_user_info);\n  return {\n    type: CALCULATE_TAX_RETURN,\n    payload: monthly_user_info\n  };\n};\n","export const CALCULATE_TAX_RETURN = \"CALCULATE_TAX_RETURN\";\n","import React, { Component, Fragment, lazy, Suspense } from \"react\";\nimport { calculate_tax_bracket } from \"../computations/computations\";\nimport { connect } from \"react-redux\";\nimport Inputs from \"./Inputs\";\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\nimport { ANNUAL_TFSA_LIMIT } from \"../constants/contants\";\nimport MoneyOutput from \"../layout/MoneyOutput\";\nimport Moneyinput from \"../layout/Moneyinput\";\nimport FormControl from \"@material-ui/core/FormControl\";\nclass TaxInput extends Component {\n  calculate_tfsa_constribution = rebate => {\n    if (ANNUAL_TFSA_LIMIT - rebate < 0) {\n      return {\n        tfsa_conrtibution_from_rebate: ANNUAL_TFSA_LIMIT,\n        tfsa_conrtibution_remaining: 0,\n        excess: rebate - ANNUAL_TFSA_LIMIT\n      };\n    } else {\n      return {\n        tfsa_conrtibution_from_rebate: rebate,\n        tfsa_conrtibution_remaining: ANNUAL_TFSA_LIMIT - rebate,\n        excess: 0\n      };\n    }\n  };\n  render() {\n    const { income_info_input } = this.props;\n\n    const tax_bracket = calculate_tax_bracket(income_info_input);\n    const {\n      original_paye,\n      deduceted_paye,\n      original_income_per_month,\n      rebate,\n      retirement_savings_rate\n    } = tax_bracket;\n\n    const new_tfsa_saving = this.calculate_tfsa_constribution(rebate);\n\n    const {\n      tfsa_conrtibution_from_rebate,\n      tfsa_conrtibution_remaining,\n      excess\n    } = new_tfsa_saving;\n\n    return (\n      <div>\n        <Inputs income_info={income_info_input} />\n        <h2>Tax Calculator</h2>\n        {/* <MoneyOutput\n          label=\"Net Income: \"\n          value={original_income_per_month}\n          prefix=\"R\"\n          suffix=\"\"\n        /> */}\n        <FormControl className=\"form-container\">\n          <Moneyinput\n            label=\"Net Income: \"\n            id=\"net_salary\"\n            name=\"net_salary\"\n            value={original_income_per_month}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Tax Paid + UIF: \"\n            id=\"paye_uif\"\n            name=\"paye_uif\"\n            value={original_paye}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Tax Paid + UIF: \"\n            id=\"paye_uif\"\n            name=\"paye_uif\"\n            value={original_paye}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Tax Paid + UIF You were supposed to pay: \"\n            id=\"deduceted_paye\"\n            name=\"deduceted_paye\"\n            value={deduceted_paye}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Because your retirement savings rate is \"\n            id=\"retirement_savings_rate\"\n            name=\"retirement_savings_rate\"\n            value={retirement_savings_rate}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Your tax rebate will be: \"\n            id=\"rebate\"\n            name=\"rebate\"\n            value={rebate}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"TFSA constribution from rebate: \"\n            id=\"tfsa_conrtibution_from_rebate\"\n            name=\"tfsa_conrtibution_from_rebate\"\n            value={tfsa_conrtibution_from_rebate}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"TFSA constribution allowance you still have remaining monthly: \"\n            id=\"tfsa_conrtibution_remaining_pm\"\n            name=\"tfsa_conrtibution_remaining_pm\"\n            value={tfsa_conrtibution_remaining / 12}\n            type=\"number\"\n          />\n          OR\n          <Moneyinput\n            label=\"For the year: \"\n            id=\"tfsa_conrtibution_remaining\"\n            name=\"tfsa_conrtibution_remaining\"\n            value={tfsa_conrtibution_remaining}\n            type=\"number\"\n          />\n          <Moneyinput\n            label=\"Access cash from rebate \"\n            id=\"excess\"\n            name=\"excess\"\n            value={excess}\n            type=\"number\"\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  income_info_input: state.tax.monthly_user_info\n});\nTaxInput.propTypes = {\n  income_info_input: PropTypes.object.isRequired,\n  calculate_tax_bracket: PropTypes.func.isRequired\n};\nexport default connect(\n  mapStateToProps,\n  { calculate_tax_bracket }\n)(TaxInput);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport NumberFormat from \"react-number-format\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Input from \"@material-ui/core/Grid\";\nimport Moneyinput from \"./Moneyinput\";\n\nclass MoneyOutput extends Component {\n  render() {\n    const { label, value, prefix, suffix } = this.props;\n    return (\n      //   <Grid>\n      //     <label>{label} </label>\n      //     <Input\n      //       value={value}\n      //       //   thousandSeparator={true}\n      //       //   prefix={prefix}\n      //       //   suffix={suffix}\n      //       //   decimalScale={2}\n      //     />\n      //   </Grid>\n\n      <Moneyinput />\n    );\n  }\n}\n\nMoneyOutput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  prefix: PropTypes.string.isRequired,\n  suffix: PropTypes.string.isRequired\n};\nexport default MoneyOutput;\n","import { CALCULATE_TAX_RETURN } from \"../actions/type\";\n\nconst initialState = {\n  monthly_user_info: {\n    monthly_salary: 20000,\n    provident_fund: 500,\n    pension_fund: 500,\n    ra_fund: 500\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case CALCULATE_TAX_RETURN:\n      console.log(action);\n      return {\n        ...state,\n        monthly_user_info: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport taxReducer from \"./taxReducer\";\n\nexport default combineReducers({\n  tax: taxReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React from \"react\";\nimport TaxInput from \"./components/TaxInput\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={TaxInput} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}